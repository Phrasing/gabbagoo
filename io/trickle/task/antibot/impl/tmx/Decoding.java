/*
 * Decompiled with CFR 0.151.
 */
package io.trickle.task.antibot.impl.tmx;

import io.trickle.util.Pair;
import io.trickle.util.Utils;
import java.util.ArrayList;
import java.util.function.Function;

public class Decoding {
    public String td_d;
    public Function<Pair<Integer, Integer>, String> td_f;

    public String td_f(Integer n, Integer n2) {
        return this.td_f.apply(new Pair(n, n2));
    }

    public static String td_2G(String string, String string2) {
        try {
            ArrayList<String> arrayList = new ArrayList<String>();
            int n = 0;
            int n2 = 0;
            while (n2 < string2.length()) {
                arrayList.add(Character.toString(Character.codePointAt(string, n) ^ Character.codePointAt(string2, n2)));
                if (++n >= string.length()) {
                    n = 0;
                }
                ++n2;
            }
            return String.join((CharSequence)"", arrayList);
        }
        catch (Exception exception) {
            exception.printStackTrace();
            return null;
        }
    }

    public static void main(String[] stringArray) {
        Decoding decoding = new Decoding("2c20e57fd38344f1b1870110e979f
        System.out.println(decoding.td_f(802, 119));
    }

    public Decoding(String string) {
        String string2 = Utils.decodeHexString(string);
        this.td_d = "";
        this.td_f = arg_0 -> this.lambda$new$0(string2, arg_0);
    }

    public String lambda$new$0(String string, Pair pair) {
        if (!this.td_d.isBlank()) return this.td_d.substring((Integer)pair.first).substring(0, (Integer)pair.second);
        String string2 = string.substring(0, 32);
        Object object = "";
        int n = 32;
        while (true) {
            if (n >= string.length()) {
                this.td_d = Decoding.td_2G(string2, (String)object);
                return this.td_d.substring((Integer)pair.first).substring(0, (Integer)pair.second);
            }
            object = (String)object + Character.toString(Integer.parseInt(string.substring(n).substring(0, 2), 16));
            n += 2;
        }
    }
}

